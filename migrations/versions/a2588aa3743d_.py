"""empty message

Revision ID: a2588aa3743d
Revises: d8897ccab3f6
Create Date: 2017-03-19 16:29:55.074066

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a2588aa3743d'
down_revision = 'd8897ccab3f6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('eventType', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('eventType', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('eventType', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('eventType', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('eventType', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('likelihood', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('likelihood', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('likelihood', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('likelihood', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('likelihood', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('likelihood', 'value',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('riskResponse', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('riskResponse', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('riskResponse', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('riskResponse', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('riskResponse', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('severity', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('severity', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('severity', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('severity', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('severity', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('severity', 'value',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('status', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('status', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('status', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('status', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('status', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('treatmentType', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('treatmentType', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('treatmentType', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('treatmentType', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('treatmentType', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('treatmentType', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('treatmentType', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('treatmentType', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('treatmentType', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('treatmentType', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('status', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('status', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('status', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('status', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('status', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('severity', 'value',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('severity', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('severity', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('severity', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('severity', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('severity', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('riskResponse', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('riskResponse', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('riskResponse', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('riskResponse', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('riskResponse', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('likelihood', 'value',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('likelihood', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('likelihood', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('likelihood', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('likelihood', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('likelihood', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('eventType', 'uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('eventType', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('eventType', 'tenant_uuid',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('eventType', 'createdBy',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('eventType', 'created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###
